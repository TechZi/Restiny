<?php

require_once dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . 'testBootstrap.php';
require_once dirname(__FILE__) . '/../../core/ConfigLoader.php';
require_once 'vfsStream/vfsStreamDirectory.php';
require_once 'vfsStream/vfsStreamWrapper.php';
require_once 'vfsStream/vfsStream.php';

/**
 * Test class for Config.
 * Generated by PHPUnit on 2011-05-04 at 04:05:20.
 */
class ConfigLoaderTest extends PHPUnit_Framework_TestCase {
	
	private $_rootConfigDir = 'configDir';
	private $_configDir = 'resources';
	private $_configFileName = 'resources';
	private	$_configFile = 'resources.php';
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		vfsStream::setup('configDir');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * @todo Implement testLoadConfig().
	 */
	public function testLoadConfig() {
		$dir = vfsStream::newDirectory($this->_configDir)->at(vfsStreamWrapper::getRoot());
		
		$filePath = $this->_configDir . DIRECTORY_SEPARATOR . $this->_configFile;
		$file = vfsStream::newFile($this->_configFile)->at($dir);
		
		$fileContent = "return array(
			'/feed/(?<name>[a-zA-Z_0-9]+)' => '/feed',
		)";
		$file->setContent($fileContent);

		$configLoader = new ConfigLoader(vfsStream::url($this->_configDir));
		$config = $configLoader->loadConfig($this->_configFileName);

		$this->assertEquals($fileContent, $config);
	}

}

?>
