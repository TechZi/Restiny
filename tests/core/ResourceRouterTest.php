<?php

/**
 * 资源载入器 - 测试用例
 *
 * @author Zhangyuyi
 * @version $Id$
 */

require_once dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . 'testBootstrap.php';
require_once dirname(__FILE__) . '/../../core/ResourceRouter.php';
require_once 'vfsStream/vfsStreamDirectory.php';
require_once 'vfsStream/vfsStreamWrapper.php';
require_once 'vfsStream/vfsStream.php';

/**
 * Test class for ResourceRouter.
 * Generated by PHPUnit on 2011-05-04 at 04:05:27.
 */
class ResourceRouterTest extends PHPUnit_Framework_TestCase {

	private $_resourceRootDirectoryPath = 'root';
	private $_reouceceDirectoryPath = 'resources';
	private $_resourceFile = 'FeedResource.php';

	protected function setUp() {
		vfsStream::setup($this->_resourceRootDirectoryPath);
	}

	protected function tearDown() {

	}

	private function _getResourceFileContent() {
		$content = '
		<?php

			class FeedResource extends Resource {
				public function get() {
					$feedId = $this->getParam("feedId");

					$outputData = array(
						"feedId" => $feedId,
						"text" => "this is a free feed"
					);

					$this->setOutputData($outputData);
				}
			}

		?>
		';

		return $content;
	}

	public function testLoadResource() {
		$this->_mockResourceFile();

		$requestUri = '/feed/100';

		$resource = ResourceRouter::loadResource($requestUri, $this->_getResourceConfig(), $this->_getMockedResourceFilePath());
		$resource->get();
		$outputData = $resource->getOutputData();

		$this->assertEquals('100', $resource->getParam('feedId'));

		$this->assertEquals('100', $outputData['feedId']);
		$this->assertEquals('this is a free feed', $outputData['text']);
	}

	private function _mockResourceFile() {
		$dir = vfsStream::newDirectory($this->_reouceceDirectoryPath)->at(vfsStreamWrapper::getRoot());
		$file = vfsStream::newFile($this->_resourceFile)->at($dir);

		$fileContent = $this->_getResourceFileContent();
		$file->setContent($fileContent);
	}

	private function _getMockedResourceFilePath() {
		return vfsStream::url($this->_reouceceDirectoryPath);
	}

	private function _getResourceConfig() {
		return array(
			'/feed/(?<feedId>[a-zA-Z_0-9]+)' => 'Feed',
		);
	}

}

?>
